{
	"info": {
		"_postman_id": "5308515f-0d31-4bb3-af6c-8e0b3a1c7f29",
		"name": "Restful_Booker_Rest_API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32833509"
	},
	"item": [
		{
			"name": "Create Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"pm.environment.set(\"bookingid\",jsonData.bookingid)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var firstname = pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"pm.environment.set(\"firstname\",firstname)\r",
							"\r",
							"var lastname = pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"pm.environment.set(\"lastname\",lastname)\r",
							"\r",
							"//Date\r",
							"const moment = require('moment')\r",
							"const today = moment()\r",
							"\r",
							"pm.environment.set(\"checkin\",today.add(1,\"d\").format(\"YYYY-MM-DD\"))\r",
							"\r",
							"pm.environment.set(\"checkout\",today.add(3,\"d\").format(\"YYYY-MM-DD\"))\r",
							"//console.log(today.add(1,\"d\").format(\"YYYY-MM-DD\"))\r",
							"//console.log(today.add(3,\"d\").format(\"YYYY-MM-DD\"))\r",
							"\r",
							"var boolean_value = pm.variables.replaceIn(\"{{$randomBoolean}}\")\r",
							"pm.environment.set(\"boolean_value\",boolean_value)\r",
							"\r",
							"var totalprice = pm.variables.replaceIn(\"{{$randomPrice}}\")\r",
							"pm.environment.set(\"totalprice\", totalprice)\r",
							"\r",
							"var additionalneeds = pm.variables.replaceIn(\"{{$randomProduct}}\")\r",
							"pm.environment.set(\"additionalneeds\",additionalneeds)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"firstname\" : \"{{firstname}}\",\r\n\"lastname\" : \"{{lastname}}\",\r\n\"totalprice\" : {{totalprice}},\r\n\"depositpaid\" : {{boolean_value}},\r\n\"bookingdates\" : {\r\n\"checkin\" : \"{{checkin}}\",\r\n\"checkout\" : \"{{checkout}}\"\r\n},\r\n\"additionalneeds\" : \"{{additionalneeds}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking/",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var code = pm.response.code",
							"//console.log(code)",
							"if(code==200) {",
							"var jsonData = pm.response.json();",
							"",
							"// pm.test(\"First Name Validation\", function() {",
							"//     pm.expect(jsonData.firstname).to.eql(pm.iterationData.get(\"firstname\"))",
							"// });",
							"",
							"// pm.test(\"Last Name Validation\", function() {",
							"//     pm.expect(jsonData.lastname).to.eql(pm.iterationData.get(\"lastname\"))",
							"// });",
							"",
							"",
							"pm.test(\"First Name Validation\", function() {",
							"    pm.expect(jsonData.firstname).to.eql(pm.environment.get(\"firstname\"))",
							"});",
							"",
							"pm.test(\"Last Name Validation\", function() {",
							"    pm.expect(jsonData.lastname).to.eql(pm.environment.get(\"lastname\"))",
							"});",
							"",
							"pm.test(\"Total Price Validation\", function() {",
							"    pm.expect(jsonData.totalprice).to.eql(parseInt(pm.environment.get(\"totalprice\")));",
							"});",
							"",
							"pm.test(\"Deposit Check Validation\", function() {",
							"    pm.expect(jsonData.depositpaid).to.eql(JSON.parse(pm.environment.get(\"boolean_value\")));",
							"});",
							"",
							"console.log(jsonData.depositpaid)",
							"console.log(pm.environment.get(\"boolean_value\"));",
							"",
							"pm.test(\"Check In Date Validation\", function() {",
							"    pm.expect(jsonData.bookingdates.checkin).to.eql(pm.environment.get(\"checkin\"))",
							"});",
							"",
							"pm.test(\"Check Out Date Validation\", function() {",
							"    pm.expect(jsonData.bookingdates.checkout).to.eql(pm.environment.get(\"checkout\"));",
							"});",
							"",
							"pm.test(\"Additional Needs Validation\", function() {",
							"    pm.expect(jsonData.additionalneeds).to.eql(pm.environment.get(\"additionalneeds\"));",
							"});",
							"}",
							"",
							"if(code==404) {",
							"    pm.test(\"Not found\")",
							"}",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking/{{bookingid}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{bookingid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"\r",
							"pm.environment.set(\"token\",jsonData.token)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"username\": \"admin\",\r\n\t\"password\": \"password123\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/auth",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var firstname = pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"pm.environment.set(\"firstname\",firstname)\r",
							"\r",
							"var lastname = pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"pm.environment.set(\"lastname\",lastname)\r",
							"\r",
							"//Date\r",
							"const moment = require('moment')\r",
							"const today = moment()\r",
							"\r",
							"pm.environment.set(\"checkin\",today.add(1,\"d\").format(\"YYYY-MM-DD\"))\r",
							"\r",
							"pm.environment.set(\"checkout\",today.add(3,\"d\").format(\"YYYY-MM-DD\"))\r",
							"//console.log(today.add(1,\"d\").format(\"YYYY-MM-DD\"))\r",
							"//console.log(today.add(3,\"d\").format(\"YYYY-MM-DD\"))\r",
							"\r",
							"var boolean_value = pm.variables.replaceIn(\"{{$randomBoolean}}\")\r",
							"pm.environment.set(\"boolean_value\",boolean_value)\r",
							"\r",
							"var totalprice = pm.variables.replaceIn(\"{{$randomPrice}}\")\r",
							"pm.environment.set(\"totalprice\", totalprice)\r",
							"\r",
							"var additionalneeds = pm.variables.replaceIn(\"{{$randomProduct}}\")\r",
							"pm.environment.set(\"additionalneeds\",additionalneeds)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"firstname\" : \"{{firstname}}\",\r\n\"lastname\" : \"{{lastname}}\",\r\n\"totalprice\" : {{totalprice}},\r\n\"depositpaid\" : {{boolean_value}},\r\n\"bookingdates\" : {\r\n\"checkin\" : \"{{checkin}}\",\r\n\"checkout\" : \"{{checkout}}\"\r\n},\r\n\"additionalneeds\" : \"{{additionalneeds}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking/{{bookingid}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{bookingid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Booking Update",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"First Name Validation\", function() {",
							"    pm.expect(jsonData.firstname).to.eql(pm.environment.get(\"firstname\"))",
							"});",
							"",
							"pm.test(\"Last Name Validation\", function() {",
							"    pm.expect(jsonData.lastname).to.eql(pm.environment.get(\"lastname\"))",
							"});",
							"",
							"pm.test(\"Total Price Validation\", function() {",
							"    pm.expect(jsonData.totalprice).to.eql(parseInt(pm.environment.get(\"totalprice\")));",
							"});",
							"",
							"pm.test(\"Deposit Check Validation\", function() {",
							"    pm.expect(jsonData.depositpaid).to.eql(JSON.parse(pm.environment.get(\"boolean_value\")));",
							"});",
							"",
							"console.log(jsonData.depositpaid)",
							"console.log(pm.environment.get(\"boolean_value\"));",
							"",
							"pm.test(\"Check In Date Validation\", function() {",
							"    pm.expect(jsonData.bookingdates.checkin).to.eql(pm.environment.get(\"checkin\"))",
							"});",
							"",
							"pm.test(\"Check Out Date Validation\", function() {",
							"    pm.expect(jsonData.bookingdates.checkout).to.eql(pm.environment.get(\"checkout\"));",
							"});",
							"",
							"pm.test(\"Additional Needs Validation\", function() {",
							"    pm.expect(jsonData.additionalneeds).to.eql(pm.environment.get(\"additionalneeds\"));",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/booking/{{bookingid}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{bookingid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/booking/{{bookingid}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{bookingid}}"
					]
				}
			},
			"response": []
		}
	]
}